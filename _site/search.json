[

{
"id": "-2019-04-06-roadmap-projeto",
"title": "Roadmap do Projeto",
"author": null,
"tags": ["projeto", "eps", "documento", "roadmap"],
"url": "/2019/04/06/roadmap-projeto/",
"date": "2019-04-06",
"content": "            Data      Versão      Descrição      Autor                  06/04/2019      0.0.1      Primeira Versão do Roadmap      Kamilla Costa      ​"
}, 

{
"id": "-2019-04-06-detalhamento-de-riscos",
"title": "Detalhamaneto de riscos",
"author": null,
"tags": ["datelhamento", "riscos", "documento", "eps"],
"url": "/2019/04/06/detalhamento-de-riscos/",
"date": "2019-04-06",
"content": "Detalhamento de Riscos1. IntroduçãoO presente documento tem por objetivo a documentação dos riscos iniciais do projeto, bem como a descrição do processo de identificação e de resposta aos riscos enfrentados.2. Identificação dos RiscosO processo de identificação de riscos se utilizou de identificação de riscos atráves da comparação análoga - método que se utiliza de experiências anteriores e similares para facilitar a concepção e identificação comum em projetos do gênero. 3. Documentação dos Riscos e Ações            Risco      Ação Preventiva      Ação Reativa                  Dificuldades da equipe com as novas tecnologias inseridas      Seleção de alunos experientes para aplicação de treinamento.      Realização de treinamento sobre tecnologias.              Divergência de horários entre membros da equipe      Elaboração de quadro de horários disponíveis da cada membro da equipe.      Planejamento de de pareamento por sprint baseado na disponibilidade dos integrantes por meio do quadro de disponibilidade.              Desistência da disciplina.      Estimular a máxima participação dos membros da equipe      Redistribuir tarefas de forma que não ocorra sobrecarga para nenhum dos membros do grupo e que o grupo consiga interagir da melhor maneira possível.              Alteração do escopo      Documentar e refinar de forma constante os requisitos      Planejar corretamente a sprint e se manter atualizado quanto às novas funcionalidades que serão adicionadas ao bot              Alteração das tecnologias      Definir de forma conscisa o escopo do projeto      Planejar corretamente a sprint e se manter atualizado quanto às novas funcionalidades que serão adicionadas ao bot              Presença dos membros durante Daily e reunião de planejamento      Definir datas, horários e locais que sejam acessíveis a todos.      Manter o time sempre alinhado quanto às decisões tomadas.              Falta de cliente real      Utilização de ferramentas que ajudem a levantar requisitos      Utilização de dados levantados por usuários que sejam o público alvo do projeto.              Dependência entre as atividades      Priorização das atividades      Planejar Sprints de forma a evitar o excesso de dependências entras as issues              Baixa produtividade dos integrantes do grupo      Motivação  da equipe quanto a criação do projeto através de reuniões constantes      Gamificação do projeto para reintegração de membros desmotivados              Dificuldade de comunicação entre os membros do grupo      Elaborar e seguir plano de comunicações      Reuniões presenciais com a equipe para tomada de decisões      4. Bibliografia  Detalhamento de Riscos da equipe do Receita Mais  Detalhamento de Riscos da equipe do HubCare  PMI. Um guia do conhecimento em gerenciamento de projetos. Guia PMBOK 6a. ed. - EUA: Project Management Institute, 2017."
}, 

{
"id": "-2019-04-05-plano-de-gerenciamento-de-custos",
"title": "Plano de Gerenciamento de Custos",
"author": null,
"tags": ["plano", "custos", "documento", "eps"],
"url": "/2019/04/05/plano-de-gerenciamento-de-custos/",
"date": "2019-04-05",
"content": "Plano de Gerenciamento de Custos1. IntroduçãoEsse documento tem por objetivo identificar e documentar a forma como será feita a gerência de custos do projeto. Detalhando os processos para gerência de custos e regras de medição.Ele basea-se na definição do PMBOK, que determina o Gerenciamento dos Custos do Projeto como o responsável por incluir os processos envolvidos em planejamento, estimativas, orçamentos, financiamentos, gerenciamento e controle dos custos, de modo que o projeto possa ser terminado dentro do orçamento aprovado. 2. Processos para Gerenciamento dos Custos do ProjetoO  processo aqui descrito se basea no plano de gerenciamento de custo descrito no PMBOK. Ele compreende quatro fases: planejamento de custos, estimativa de custos, determinação de orçamento, controle de custos, abaixo está descrito a forma como cada uma das etapas será realizada no presente projeto. 2.1. Estimar CustosSegundo o PMBOK, estimar os custos é desenvolver uma estimativa dos recursos necessários para executar as atividades do projeto, essas estimativas incluem a identificação e a consideração das alternativas de custo para iniciar e terminar o projeto.Para auxiliar no processo de estimar custos, serão utilizadas as seguintes técnicas:      Estimativa Análoga: Esta estimativa se baseia na experiência dos membros da equipe em projetos semelhantes.        Estimativa bottom-up: Esta estimativa se baseia na estrutura analítica do projeto para gerar estimativa de custos, partindo dos componentes de nível mais baixo da estrutura.  2.2. Determinar OrçamentoPara determinar o valor do orçamento do projeto será feito o cálculo baseado no número de horas trabalhadas planejadas da equipe multiplicado pelo preço da hora. Logo, o orçamento será determinado por:                         Orçamento = Horas Trabalhadas * Preço da Hora2.3. Controlar CustosO controle de custos será feito por meio da Gerência do valor da agregado(EVM) ao decorrer do projeto.Para isso será necessário calcular algumas variáveis em alguns momentos do projeto. Por isso será necessário calcular três elementos: valor planejado (VP), valor agregado(VA) e o custo real (CR). A seguir será explicado um pouco sobre cada elemento:      Valor Planejado (VP)          O valor planejado será estimado a partir das horas, e será dado em reais. Sendo este o número de horas de trabalho planejadas para cada membro da equipe multiplicado pelo número de integrantes e o resultado desta operação multiplicado pelo custo da hora trabalhada.            Valor Agregado(VA)                  Valor agregado (VA) é a medida do trabalho executado expressa em termos do orçamento autorizado para tal trabalho. É o orçamento associado ao trabalho autorizado que foi concluído.                    Ele é calculado por meio da multiplicação do valor planejado para a atividade pela porcentagem concluída da mesma atividade ao fim do tempo planejado.Tendo assim o valor agregado em reais.                  Custo Real(CR)          O custo real representa o quanto foi gasto na execução do trabalho, sendo este calculado a partir da multiplicação das horas gastas pelos integrantes do projeto pelo preço da hora trabalhada.      Com estas dimensões é possível realizar o cálculo da variação de custos e do índice de desempenho de custos, dois importantes indicadores para o gerenciamento do valor agregado.&lt;/p&gt;3. Regras de Medição e DesempenhoA medição de desempenho dos custos ao decorrer do projeto será dada pelo Gerenciamento do valor Agregado(EVM), como foi dito. Para que esta análise seja mais precisa e quantificada deve se calcular dois índices de eficiência:  IDC - Índice de Desempenho de Custos  IDP - Índice de Desempenho de PrazosO IDC mede a eficiência dos custos em relação ao orçamento planejado, ou seja, IDC = Valor Agregado/Custo Real. Para comparação e análise o IDC pode se enquadrar em três diferentes intervalos:            Valor      Interpretação                  IDC &gt; 1      Custo mais baixo que o planejado              IDC = 1      Custo conforme planejado              IDC &lt; 1      Custo mais alto que o planejado      Já o IDP mede a eficiência do cronograma do projeto, e é calculado dividindo o valor agregado pelo valor planejado, ou seja, IDP = VA/VP. Para comparação e análise o IDP pode se enquadrar em três diferentes intervalos:            Valor      Interpretação                  IDP &gt; 1      Adiantado              IDP = 1      No prazo              IDP &lt; 1      Atrasado      Para análise do valor agregado também existem outras duas importantes variáveis de desempenho que serão utilizadas durante o projeto para determinar a situação momentânea do projeto:  Variação de Prazos  Variação de CustosA variação de prazos é uma medida de desempenho do cronograma expressa como a diferença entre o valor agregado e o valor planejado. É a quantidade de adiantamento ou atraso do projeto em relação à data de entrega planejada, em um determinado momento. É igual ao valor agregado (VA) menos o valor planejado (VP), ou seja, VPR = VA – VP.A variação de custos(VC) é a quantidade de déficit ou excedente orçamentário em um determinado momento, expressa como a diferença entre o valor agregado(VA) e o custo real(CR), ou seja, VC = VA – CR. A VC é uma medida do desempenho dos custos em um projeto, e é particularmente crítica pois indica a relação entre o desempenho físico e os custos gastos.5. Bibliografia  GCS da equipe do Receita Mais  PMI. Um guia do conhecimento em gerenciamento de projetos. Guia PMBOK 6a. ed. - EUA: Project Management Institute, 2017."
}, 

{
"id": "-2019-04-05-plano-de-comunicacao",
"title": "Plano de Comunicação",
"author": null,
"tags": ["plano", "comunicação", "eps"],
"url": "/2019/04/05/plano-de-comunicacao/",
"date": "2019-04-05",
"content": "            Data      Versão      Descrição      Autor                  05/04/2019      1.0      Criação do documento      Kamilla Costa      Objetivo&emsp;&emsp; Este documento tem como objetivo evidenciar a comunicação interna da equipe e as ferramentas utilizadas para obtenção da mesma.FerramentasTelegram  Por esta ferramenta, discutimos assuntos operacionais pontuais, como horários de reuniões, pautas. Algumas vezes, dailies podem ocorrer por esta.Github  O GitHub é essencial na transparência interna da equipe e externa junto ao cliente, as orientadoras do projeto (Carla Rocha e Bruna Nayara) e a comunidade em geral. Foi feito um uso extensivo das issues para comunicação entre os membros da equipe, para dúvidas sobre a issue e para mostrar o andamento do projeto.Zenhub  Por esta ferramenta, aplica-se o Kanban e monitora-se o andamento das issues."
}, 

{
"id": "-2019-04-05-backlog-de-produto",
"title": "Backlog do Produto",
"author": null,
"tags": ["plano", "backlog", "documento", "eps"],
"url": "/2019/04/05/backlog-de-produto/",
"date": "2019-04-05",
"content": "Backlog do ProdutoÉpicos     ID      DESCRIÇÃO          EP01      Conteúdo          EP02      Linkagem                     Features     ID      DESCRIÇÃO      ÉPICO          FT01      Tópicos base bot      EP01          FT02      Variáveis      EP01          FT03      Estruturas Condicionais      EP01          FT04      Estruturas de repetição      EP01          FT05      Vetores      EP01          FT06      Matrizes      EP01          FT07      Funções      EP01          FT08      Arquivos      EP01          FT09      Linkagem estática      EP01          FT10      Linkagem conteúdo extra      EP02          FT11      Linkagem erro      EP02          FT12      Linkagem exercício      EP02     Histórias de Usuários     ID      Descrição      Feature          IS01      Adicionar Tópico Cumprimentar      FT01          IS02      Adicionar tópico Menu de Ajuda      FT01          IS03      Adicionar tópico Sobre Python      FT01          IS04      Adicionar tópico Sobre a Aix      FT01          IS05      Adicionar tópico de Despedida      FT01          IS06      Adicionar tópico sobre Curiosidades de Python      FT01          IS07      Adicionar tópico para que o bot seja capaz de Manter uma conversa      FT01          IS08      Adicionar tópico para que o bot entre em Fallback quando necessário      FT01          IS09      Adicionar tópico com a definição de variável      FT02          IS10      Adicionar tópico com exemplos de usos de variáveis em python      FT02          IS11      Adicionar tópico com linkagem estática para conteúdo extra sobre variáveis      FT09          IS12      Adicionar tópico com linkagem estática para sugestão de exercício sobre uso de variáveis      FT09          IS13      Adicionar tópico com a definição do que são estruturas condicionais      FT03          IS14      Adicionar tópico com exemplos de utilização de estruturas condicionais      FT03          IS15      Adicionar tópico com linkagem estática para conteúdo extra sobre estruturas condicionais      FT09          IS16      Adicionar tópico com linkagem estática para sugestão de exercício sobre uso de estruturas condicionais      FT09          IS17      Adicionar tópico com a definição do que são estruturas de repetição      FT04          IS18      Adicionar tópico com exemplos de utilização de estruturas de repetição      FT04          IS19      Adicionar tópico com linkagem estática para conteúdo extra sobre estruturas de repetição      FT09          IS20      Adicionar tópico com linkagem estática para sugestão de exercício sobre uso de estruturas de repetição      FT09          IS21      Adicionar tópico com a definição do que são vetores      FT05          IS22      Adicionar tópico com exemplos de utilização de vetores      FT05          IS23      Adicionar tópico com linkagem estática para conteúdo extra sobre vetores      FT09          IS24      Adicionar tópico com linkagem estática para sugestão de exercício sobre uso de vetores      FT09          IS25      Adicionar tópico com a definição do que são matrizes      FT06          IS26      Adicionar tópico com exemplos de utilização de matrizes      FT06          IS27      Adicionar tópico com linkagem estática para conteúdo extra sobre matrizes      FT09          IS28      Adicionar tópico com linkagem estática para sugestão de exercício sobre uso de matrizes      FT09          IS29      Adicionar tópico com a definição do que são funções      FT07          IS30      Adicionar tópico com exemplos de utilização de funções      FT07          IS31      Adicionar tópico com linkagem estática para conteúdo extra sobre funções      FT09          IS32      Adicionar tópico com linkagem estática para sugestão de exercício sobre uso de funções      FT09          IS33      Adicionar tópico com a definição do que são arquivos      FT08          IS34      Adicionar tópico com exemplos de utilização de arquivos      FT08          IS35      Adicionar tópico com linkagem estática para conteúdo extra sobre arquivos      FT09          IS36      Adicionar tópico com linkagem estática para sugestão de exercício sobre uso de arquivos      FT09          IS37      Procurar e estudar estrutura de sites confiáveis para estudos da linguagem      FT10          IS38      Criar crawler (ou ligação com a API) dos sites encontrados para conteúdo extra      FT10          IS39      Estudar estrutura da API do stackoverflow      FT11          IS40      Criar API para comunicação com a API do Stackoverflow      FT11          IS41      Estudar estrutura do URI e correlatos para verificação de viabilidade técnica      FT12          IS42      Criar crawler (ou ligação com a API) dos sites encontrados para recomendação de exercícios      FT12     Tasks Issues     IS      ID      Descrição      Feature           IS01      T01      Criar conteúdo referente a ação do bot de cumprimentar       FT01          IS01      T02      Inserir conteúdo referente a ação de cumprimentar do bot. Incluindo arquivos de Domain.yml, intents e utter      FT01          IS02      T01      Criar conteúdo referente a ação do bot de oferecer o menu de ajuda, a fim de explicar no que o bot pode ajudar o usuário       FT01          IS02      T02      Inserir conteúdo referente a ação de apresentar menu de ajuda do bot. Incluindo arquivos de Domain.yml, intents e utter      FT01          IS03      T01      Criar conteúdo referente a ação do bot de explicar sobre a linguagem python      FT01          IS03      T02      Inserir conteúdo referente a ação de explicar sobre python. Incluindo arquivos de Domain.yml, intents e utter      FT01          IS04      T01      Criar conteúdo referente a ação do bot de explicar sobre a Aix      FT01          IS04      T02      Inserir conteúdo referente a ação de explicar sobre a Aix. Incluindo arquivos de Domain.yml, intents e utter      FT01          IS05      T01      Criar conteúdo referente a ação de despedir do bot      FT01          IS05      T02      Inserir conteúdo referente a ação de despedir do bot. Incluindo arquivos de Domain.yml, intents e utter      FT01          IS06      T01      Criar conteúdo referente a curiosidades sobre python do bot      FT01          IS06      T02      Inserir conteúdo referente a curiosidades sobre python. Incluindo arquivos de Domain.yml, intents e utter      FT01          IS07      T01      Criar conteúdo referente a ação de manter conversa que tem como finalidade fazer com que o usuário continue uma conversa fluida com o bot.      FT01          IS07      T02      Inserir conteúdo referente a ação de manter conversa com o  bot. Incluindo arquivos de Domain.yml, intents e utter      FT01          IS08      T01      Criar conteúdo referente a ação de fallback do bot que representa o estado do bot no momento que não entender a entrada do usuário, solicitando assim que o mesmo possa repetir a entrada de forma mais clara.      FT01          IS08      T02      Inserir conteúdo referente a ação de fallback do bot. Incluindo arquivos de Domain.yml, intents e utter      FT01          IS09      T01      Criar conteúdo referente a ação de explicar sobre variáveis      FT02          IS09      T02      Inserir conteúdo referente a ação de explicar sobre variáveis. Incluindo arquivos de Domain.yml, intents e utter      FT02          IS10      T01      Criar conteúdo referente a ação de apresentar exemplos de utilização de variáveis na linguagem python.      FT02          IS10      T02      Inserir conteúdo referente a ação de apresentar exemplos de variáveis. Incluindo arquivos de Domain.yml, intents e utter      FT02          IS11      T01      Pesquisar link referente a utilização de variáveis na linguagem python.      FT02/FT09          IS11      T02      Inserir conteúdo referente a ação de oferecer um link sobre a utilização de variáveis. Incluindo arquivos de Domain.yml, intents e utter      FT02/FT09          IS12      T01      Pesquisar link referente a sugestão de exercícios referentes ao uso de variáveis na linguagem python.      FT02/FT09          IS12      T02      Inserir conteúdo referente a ação de oferecer um link sobre sugestão de exercício sobre utilização de variáveis. Incluindo arquivos de Domain.yml, intents e utter      FT02/FT09          IS13      T01      Criar conteúdo referente a ação de explicar sobre Estruturas condicionais      FT03          IS13      T02      Inserir conteúdo referente a ação de explicar sobre estruturas condicionais. Incluindo arquivos de Domain.yml, intents e utter      FT03          IS14      T01      Criar conteúdo referente a ação de apresentar exemplos de utilização de Estruturas condicionais na linguagem python.      FT03          IS14      T02      Inserir conteúdo referente a ação de apresentar exemplos de Estruturas condicionais. Incluindo arquivos de Domain.yml, intents e utter      FT03          IS15      T01      Pesquisar link referente a utilização de Estruturas condicionais na linguagem python.      FT03/FT09          IS15      T02      Inserir conteúdo referente a ação de oferecer um link sobre a utilização de Estruturas condicionais. Incluindo arquivos de Domain.yml, intents e utter      FT03/FT09          IS16      T01      Pesquisar link referente a sugestão de exercícios referentes ao uso de Estruturas condicionais na linguagem python.      FT03/FT09          IS16      T02      Inserir conteúdo referente a ação de oferecer um link sobre sugestão de exercício sobre utilização de Estruturas condicionais. Incluindo arquivos de Domain.yml, intents e utter      FT03/FT09          IS17      T01      Criar conteúdo referente a ação de explicar sobre Estruturas de repetição      FT04          IS17      T02      Inserir conteúdo referente a ação de explicar sobre estruturas de repetição. Incluindo arquivos de Domain.yml, intents e utter      FT04          IS18      T01      Criar conteúdo referente a ação de apresentar exemplos de utilização de Estruturas de repetição na linguagem python.      FT04          IS18      T02      Inserir conteúdo referente a ação de apresentar exemplos de Estruturas de repetição. Incluindo arquivos de Domain.yml, intents e utter      FT04          IS19      T01      Pesquisar link referente a utilização de Estruturas de repetição na linguagem python.      FT04/FT09          IS19      T02      Inserir conteúdo referente a ação de oferecer um link sobre a utilização de Estruturas de repetição. Incluindo arquivos de Domain.yml, intents e utter      FT04/FT09          IS20      T01      Pesquisar link referente a sugestão de exercícios referentes ao uso de Estruturas repetição na linguagem python.      FT04/FT09          IS20      T02      Inserir conteúdo referente a ação de oferecer um link sobre sugestão de exercício sobre utilização de Estruturas de repetição. Incluindo arquivos de Domain.yml, intents e utter      FT04/FT09          IS21      T01      Criar conteúdo referente a ação de explicar sobre Vetores      FT05          IS21      T02      Inserir conteúdo referente a ação de explicar sobre Vetores.Incluindo arquivos de Domain.yml, intents e utter      FT05          IS22      T01      Criar conteúdo referente a ação de apresentar exemplos de utilização de Vetores na linguagem python.      FT05          IS22      T02      Inserir conteúdo referente a ação de apresentar exemplos de Vetores. Incluindo arquivos de Domain.yml, intents e utter      FT05          IS23      T01      Pesquisar link referente a utilização de Vetores na linguagem python.      FT05/FT09          IS23      T02      Inserir conteúdo referente a ação de oferecer um link sobre a utilização de Vetores. Incluindo arquivos de Domain.yml, intents e utter      FT05/FT09          IS24      T01      Pesquisar link referente a sugestão de exercícios referentes ao uso de Vetores na linguagem python.      FT05/FT09          IS24      T02      Inserir conteúdo referente a ação de oferecer um link sobre sugestão de exercício sobre utilização de Vetores. Incluindo arquivos de Domain.yml, intents e utter      FT05/FT09          IS25      T01      Criar conteúdo referente a ação de explicar sobre Matrizes      FT06          IS25      T02      Inserir conteúdo referente a ação de explicar sobre Matrizes.Incluindo arquivos de Domain.yml, intents e utter      FT06          IS26      T01      Criar conteúdo referente a ação de apresentar exemplos de utilização de Matrizes na linguagem python.      FT06          IS26      T02      Inserir conteúdo referente a ação de apresentar exemplos de Matrizes. Incluindo arquivos de Domain.yml, intents e utter      FT06          IS27      T01      Pesquisar link referente a utilização de Matrizes na linguagem python.      FT06/FT09          IS27      T02      Inserir conteúdo referente a ação de oferecer um link sobre a utilização de Matrizes. Incluindo arquivos de Domain.yml, intents e utter      FT06/FT09          IS28      T01      Pesquisar link referente a sugestão de exercícios referentes ao uso de Matrizes na linguagem python.      FT06/FT09          IS28      T02      Inserir conteúdo referente a ação de oferecer um link sobre sugestão de exercício sobre utilização de Matrizes. Incluindo arquivos de Domain.yml, intents e utter      FT06/FT09          IS29      T01      Criar conteúdo referente a ação de explicar sobre Funções      FT07          IS29      T02      Inserir conteúdo referente a ação de explicar sobre Funções.Incluindo arquivos de Domain.yml, intents e utter      FT07          IS30      T01      Criar conteúdo referente a ação de apresentar exemplos de utilização de Funções na linguagem python.      FT07          IS30      T02      Inserir conteúdo referente a ação de apresentar exemplos de Funções. Incluindo arquivos de Domain.yml, intents e utter      FT07          IS31      T01      Pesquisar link referente a utilização de Funções na linguagem python.      FT07/FT09          IS31      T02      Inserir conteúdo referente a ação de oferecer um link sobre a utilização de Funções. Incluindo arquivos de Domain.yml, intents e utter      FT07/FT09          IS32      T01      Pesquisar link referente a sugestão de exercícios referentes ao uso de Funções na linguagem python.      FT07/FT09          IS32      T02      Inserir conteúdo referente a ação de oferecer um link sobre sugestão de exercício sobre utilização de Funções. Incluindo arquivos de Domain.yml, intents e utter      FT07/FT09          IS33      T01      Criar conteúdo referente a ação de explicar sobre Arquivos      FT08          IS33      T02      Inserir conteúdo referente a ação de explicar sobre Arquivos.Incluindo arquivos de Domain.yml, intents e utter      FT08          IS34      T01      Criar conteúdo referente a ação de apresentar exemplos de utilização de Arquivos na linguagem python.      FT08          IS34      T02      Inserir conteúdo referente a ação de apresentar exemplos de Arquivos. Incluindo arquivos de Domain.yml, intents e utter      FT08          IS35      T01      Pesquisar link referente a utilização de Arquivos na linguagem python.      FT08/FT09          IS35      T02      Inserir conteúdo referente a ação de oferecer um link sobre a utilização de Arquivos. Incluindo arquivos de Domain.yml, intents e utter      FT08/FT09          IS36      T01      Pesquisar link referente a sugestão de exercícios referentes ao uso de Arquivos na linguagem python.      FT08/FT09          IS36      T02      Inserir conteúdo referente a ação de oferecer um link sobre sugestão de exercício sobre utilização de Arquivos. Incluindo arquivos de Domain.yml, intents e utter      FT08/FT09          IS37      T01      Procurar sites de ensino sobre python      FT10          IS37      T02      Relatar estrutura do site (caso não haja API, determinar caminho html até o conteúdo)      FT10          IS38      T01      Criar action responsável pela comunicação do bot com o site externo (ou API)      FT10          IS38      T02      Elaborar parser dos dados recebidos      FT10          IS38      T03      Bot responder com dados retornados do ambiente externo      FT10          IS39      T01      Documentar pontos relevantes da estrutura da API do stackoverflow (na própria issue)      FT11          IS39      T02      Descobrir viabilidade técnica de comunicação com a API do stackoverflow      FT11          IS40      T01      Criar action responsável pela comunicação do bot com a API do Stackoverflow      FT11          IS40      T02      Elaborar parser dos dados recebidos      FT11          IS40      T03      Bot responder com dados retornados do ambiente externo      FT11          IS41      T01      Descobrir viabilidade técnica de comunicação com o URI online judge e correlatos      FT12          IS41      T02      Relatar estrutura do site (caso não haja API, determinar caminho html até o conteúdo)      FT12          IS42      T01      Criar action responsável pela comunicação do bot com o site externo (ou API)      FT12          IS42      T02      Elaborar parser dos dados recebidos      FT12          IS42      T03      Bot responder com dados retornados do ambiente externo      FT12     "
}, 

{
"id": "-2019-04-03-estudo-de-tecnologia",
"title": "Estudo de Tecnologia",
"author": null,
"tags": ["estudo", "tecnologia", "boilerplate", "eps", "mds"],
"url": "/2019/04/03/estudo-de-tecnologia/",
"date": "2019-04-03",
"content": "Estudo de Tecnologia BoilerplateDefinições  Intent: Inteção do usuário, “significado” da frase;  Utter: Ação de resposta do bot; Mensagem que ele envia após identificar um intent;  Storie: Conjunto de intents e utters, define o caminho que o Bot irá tomar na situação definida  Entities: Quase como um assunto, conjunto de palavras que podem encaixar numa mesma intent          ex: entitie “Esporte” contém:                  Futebol, Volei, Basquete                    Sintaxe:Como elaborar uma intent:Primeiramente é necessário atribuir um nome a intent. Para fazer isso coloca-se ‘## intent: ‘ e logo após os dois pontos o nome da intent.ex: ## intent:conversarApós definir o título é necessário definir as frases que serão reconhecidas pelo bot para que interaja com o usuário. Uma dica importante é não repetir palavras e/ou frases. Sempre tentar utilizar palavras diferentes em cada frase. Antes de digitar cada frase é colocado um ‘-‘, após um espaço é escrita a frase. Uma frase por linha apenas.ex: ## intent:conversar\t- Preciso falar um coisa\t- Vamos bater um papo?\t- Quero te contar um segredo.Para iniciar outra intent basta dar um enter, colocar ‘##’ e definir título e frases para a intent.Como elaborar uma utter:Assim como as Intents, as Utters necessitam de um título e este deve se relacionar a uma Intent. O título deve ser iniciado por “utter_” logo após é colocado o título que deve ser o mesmo título de uma intent existente e logo após ‘:’.ex: utter_conversar:            Logo na linha de baixo são adicionados os textos de resposta ao usuário assim que uma utter é chamada. É possível adicionar diversos textos. O bot, de forma aleatória escolherá qual irá utilizar. Para definir um texto resposta, coloca-se ‘- text:      ’. Todas as palavras que vierem abaixo, até que se encontre uma próxima utter ou um próximo text, faz parte do texto.      ex: utter_conversar:\t- text: |\t\tOiii, quanto tempo!\t\tSobre o que gostaria de falar?\t- text: |\t\tTenhos muitas novidades..\t\tNem sei por onde começar!Como elaborar uma storie:Assim como as Intents e as Utters, as Stories também necessitam de título. Para criar um título utiliza-se ‘## ‘ logo após um espaço é definido o nome da storie ou caminho a ser seguido.ex: ## bater_um_papoApós definir o título é necessário identificar as intents e respectivas utters que deverão ser seguidas, respectivamente. Para definir a intent que será utilizada colocamos ‘* ‘ e logo após o nome da intent. Na linha de baixo, pressiona-se Tab, coloca-se um ‘- ‘ e logo a pós a utter correspondente a intent adicionada.ex: ## bater_um_papo\t* conversar\t\t- utter_conversarPara que siga realmente uma história, são colocadas várias intents e utters que se complementem passando a ideia de que é uma pessoa quem está conversando.ex: ## batter_um_papo\t* cumprimentar\t\t- utter_cumprimentar\t* perguntar_como_esta\t\t- utter_perguntar_como_esta\t* perguntar_novidades\t\t-utter_perguntar_novidadesPastas e documentos importantes  /bot/data/intents/ -&gt; Local onde ficam as intents  /bot/data/stories/ -&gt; Local onde ficam as stories  /bot/domain.yml -&gt; Arquivo que lista as intents, entidades, utters e o templates das utters"
}, 

{
"id": "-2019-04-01-sprint-02",
"title": "Revisão da Sprint 1",
"author": null,
"tags": ["sprint", "revisão", "eps"],
"url": "/2019/04/01/sprint-02/",
"date": "2019-04-01",
"content": "Sprint 1DuraçãoDuração: 1 semanaInício: 23/03/2019Fim: 30/03/2019ObjetivosTreinamentos de tecnologiasCriação de documentaçãoDockerização do ambienteSprint Backlog#8 Treinamento de tecnologias#9 Treinamento de Chatbot#10 Elaboração do TAP#11 Elaboração do EAP#12 Definir tecnologias a serem utilizadas#13 Criar documento de Metodologia#14 Documentar Sprint 0#15 Definição da arquitetura inicial#16 Elaborar documento de visão#17 Elaborar documento de arquitetura#18 Criar fluxograma versão 1.0#19 Dockerizar o ambienteRetrospectivaPontos PositivosTem lancheA gente conseguiu se comunicar bemIssues foram completadasUsamos bem as issues (estamos nos comunicando nas issues)Iuri monopolizou arquitetura (ajudando quem não podetrabalhar no momento)Conseguimos definir melhor o projeto (estava muito abstrato)Não houveram muitos empecilhosIssues finalizadasConseguimos fechar tudoBoa comunicaçãoFechamos tudoApesar da falta de conhecimento sobre documentação, MDS conseguiu produzir bemIuri trabalhando muitoAjuda do Guilherme no doc de arquiteturaDiagrama de Caso de Uso foi útilAjuda externaDescobrimos muita coisa sobre EPS que não sabíamosAprendendo coisas legaisDocker tá indo (ainda não sei pra onde)MDS conseguiu fazer os documentosEsforço de MDS, EPS deixou a desejar ao entregar a parte completaPontos NegativosFalta de conhecimentoPR erradosIuri monopolizou o conteúdoSábado a tardeMonopolio de trabalho pode atrapalhar parte da equipeComunicação entre EPS e MDS, principalmente no doc de ArquiteturaMuito trabalho para o Iuri (tinha mais tempo livre, e trabalhou mais)Falta de salas pro DojoIuri trabalhandoComeçamos errado na metodologia (levantamento de requisitos não foi feito direito antes da arquitetura)Arquitetura começou mal, pois começou sem bom conhecimento das tecnologiasMais integração no time de EPS (todos estarem presentes na reunião, e conseguir resolver problemas o mais rápido possível)MelhoriasPareamento sem competição, e sim como time (definir bem a sua parte e “ajudar” o outro no tempo que sobrar)Melhorar comunicação entre EPS e MDSE melhorar divisão do trabalho (e respeito a divisão)Salas para o DojôFalta de organização ao criar documentaçãoLer mais o PMBOKMelhorar metodologiaConstruir backlog da Sprint antes da reuniãoBurndownVelocityQuadro de ConhecimentoRiscos            Risco      Ação Preventiva      Ação Reativa                  Dificuldades da equipe com as novas tecnologias inseridas      Seleção de alunos experientes para aplicação de treinamento.      Realização de treinamento sobre tecnologias.              Elaboração da arquitetura do projeto      Estudo das tecnologias que integrarão a arquitetura      Reuniões da equipe de EPS para definição das tecnologias e arquitetura              Alteração do escopo      Documentar e refinar de forma constante os requisitos      Planejar corretamente a sprint e se manter atualizado quanto às novas funcionalidades que serão adicionadas ao bot      "
}, 

{
"id": "-2019-04-01-identidade-visual",
"title": "Identidade Visual",
"author": null,
"tags": ["identidade", "visual", "mds"],
"url": "/2019/04/01/identidade-visual/",
"date": "2019-04-01",
"content": "1. Identidade visual1.1 Logo &emsp;&emsp;A ideia do mascote surgiu a partir de uma história da mitologia romana, referente ao nascimento do deus Júpiter e a forma como a cabra Aix foi necessária para sua sobrevivência. A analogia vem do trocadilho formado pelo nome do deus romano e a plataforma Jupyter, com a qual o bot irá trabalhar em conjunto e \"alimentar\" de informações sobre a linguagem Python, que é representada na arte pela cobras entrelaçadas no símbolo da plataforma. &emsp;&emsp;Quanto ao caráter técnico, a logo foi desenvolvida a partir de técnicas do desenho vetorial, para garantir uma melhor qualidade da imagem. Isso possibilitará que a ilustração possa ser trabalhada em diversos formatos, em ambientes sociais diferentes.  &emsp;&emsp;Já no que tange a originalidade, a logo consiste no mascote do projeto inserido no meio de dois símbolos laranjas que faz analogia ao sistema Jupyter, no qual o bot será integrado. E as cobras representam a especificadade do projeto, que estará voltado para a linguagem Python.1.2 WordmarkAix - chatBode de Python1.3 História &emsp;&emsp;Segundo a mitologia romana, a cabra Aix, por ser tão detestável, foi requisitado pelos Titãs à sua mãe Terra - Gaia - que a escondesse, para que assim não fosse possível vê-la. Gaia então a enviou para Creta e, devido a isto, posteriormente viria a amamentar Júpiter (Zeus) quando este era ainda jovem. Além disso, Júpiter (Zeus) fez uma couraça a partir da pele da cabra, que ficou conhecida como Égide. Fez também, de um de seus chifres, a Cornucópia, que ofereceu à Amaltéia.1.4 Arte VisualLOGO:[]IMAGEM SECUNDÁRIA:[]2. Paleta de Cores &emsp;&emsp;As cores escolhidas foram baseadas no logomarca do Projeto Jupyter em conjunto com os padrões de cores que vemos nas cabras, representando a Aix e a plataforma na qual ele será acoplado. Há também as cores verde e azul que foram usadas para representar as cobras do símbolo linguagem Python, que é o conteúdo em qual o produto irá focar.2.1 Descrição das Cores      #3475A5        #FCDE54        #FAD6CF        #F16063        #020202        #D8DCD9        #A27C89        #E47632        #3F403F        #000000  3. Tipografia3.1 Roboto Slab &emsp;&emsp;A fonte Roboto Slab deverá ser usada na forma Bold para títulos e headers e na forma regular para destacar informações nos textos gerais e explicativos&lt;/br&gt;&lt;/br&gt;## 3.2 Roboto &emsp;&emsp;A fonte Roboto deverá ser usada na forma Regular para textos gerais. # 4. Referências* [Color Hexa](https://www.colorhexa.com/), acessado dia 02/04* [Color Adobe](https://color.adobe.com/pt/create/color-wheel), acessado dia 01/04* [Lino](https://botlino.github.io/docs/doc-identidade-visual), acessado dia 01/04* [Dulce](https://dulce-work-schedule.github.io/especificacao/identidade_visual.html), acessado dia 31/03* [Kalkuli](https://fga-eps-mds.github.io/2018.2-Kalkuli/docs/idVisual), acessado dia 31/03* [Projeto Jupyter](https://github.com/jupyter/jupyter.github.io/blob/master/jupyter-circle.png), acessado dia 31/03"
}, 

{
"id": "-2019-03-31-folha-de-estilo",
"title": "Folha de Estilo",
"author": null,
"tags": ["folha", "estilo", "eps", "documento"],
"url": "/2019/03/31/folha-de-estilo/",
"date": "2019-03-31",
"content": "Folha de EstiloEste documento define as convenção seguidas para a programação na linguagem python que serão utilizadas no presente projeto. Ele tem como base o PEP8 – Style Guide for Python Code, porém apresenta algumas leves alterações para refletir melhor as necessidades da equipe.Obervação: este documento pode sofrer alterações, caso seja evidenciado que alguma das convenções aqui descritas não se adequam da melhor forma ao contexto do projeto.Layout do CódigoIdentaçãoUsar 4 espaços por nível de identação (configurar tab para 4 espaços)Como fazer:#Com argumentos no primeira linha:foo = long_function_name(var_one, var_two,                         var_three, var_four)#Adicione 4 espaços extras para distinguir argumentos do resto (caso não fique na primeira linha):def long_function_name(        var_one, var_two, var_three,        var_four):    print(var_one)#Sem argumentos na primeira linha:foo = long_function_name(    var_one, var_two,    var_three, var_four)Como não fazer:#Argumentos na primeira linha são proibidos quando não utilizar alinhamento vertical:foo = long_function_name(var_one, var_two,    var_three, var_four)#Identação dos argumentos não se distingue do resto do código:def long_function_name(    var_one, var_two, var_three,    var_four):    print(var_one)No caso de listas e dicionários, o fechamento deve ser feito abaixo do conteúdo, no mesmo nível da declaração da lista ou dicionário:Como fazer:my_list = [    1, 2, 3,    4, 5, 6,]my_dict = {    \"key1\": \"value1\",    \"key2\": \"value2\"}Como não fazer:my_list = [    1, 2, 3,    4, 5, 6,]my_dict = {    \"key1\": \"value1\",    \"key2\": \"value2\"}Tamanho máximo de caracteres por linhaO tamanho máximo de caracteres por linha será de 79 caracteres.Este número se deve a maior comodidade e adequação à maioria dos editores de texto, evitando a necessidade de scroll lateral no texto, permitindo, assim, uma visão melhor do código como um todo.Em casos em que a linha ultrapasse o valor estipulado, a linha deverá ser quebrada (neste caso, será utilizado a continuação de linha implícita, através de parênteses, colchetes e chaves). Outra possibilidade é a utilização de barra invertida.Exemplo:with open('/path/to/some/file/you/want/to/read') as file_1, \\    open('/path/to/some/file/being/written', 'w') as file_2:    file_2.write(file_1.read())Quebra de linha em operadores bináriosCaso necessário, será utilizado quebra de linha após o operador binário.Como fazer:income = (gross_wages +      taxable_interest +      (dividends - qualified_dividends) -      ira_deduction -      student_loan_interest)Como não fazer:income = (gross_wages      + taxable_interest      + (dividends - qualified_dividends)      - ira_deduction      - student_loan_interest)Espaços em brancoDeverá existir dois espaços em branco entre as declarações de funções.Como fazer:def function1():    do_something()def function2():    do_something_but_different()Como não fazer:def function1():    do_something()def function2():    do_something_but_different()Deverá existir um espaço em branco entre parágrafos de código.ImportsOs imports são sempre colocados na parte superior do arquivo, logo após os comentários de módulos e docstrings, e antes dos módulos globais e constantes.Os imports devem ser agrupadas na seguinte ordem:Imports de biblioteca padrão.Imports de terceiros relacionadas.Imports específicas de aplicativo / biblioteca local.Imports devem ser feitos em linha separadas.Como fazer:import osimport sysComo não fazer:import sys, osTambém é permitido desta forma:from subprocess import Popen, PIPEAspas em StringsPython não distigue entre aspas simples e duplas. Então por pura convenção, será utilizada aspas simples para Strings.Espaçamento entre declarações e expressõesEvite espaçamentos nos seguintes casos:  Imediatamente dentro de parênteses, colchetes e chaves:Yes: spam(ham[1], {eggs: 2})No:  spam( ham[ 1 ], { eggs: 2 } )  Entre uma vírgula final e um fechamento de parênteses:Yes: foo = (0,)No:  bar = (0, )  Imediatamente antes de um vírgula, ponto e vírgula ou dois pontos:Yes: if x == 4: print x, y; x, y = y, xNo:  if x == 4 : print x , y ; x , y = y , x  Imediatamente antes de abertura de parênteses:Yes: spam(1)No:  spam (1)  Imediatamente antes de indexação:Yes: dct['key'] = lst[index]No:  dct ['key'] = lst [index]  Alinhamento entre operadores:Como fazer:x = 1y = 2long_variable = 3Como não fazer:x             = 1y             = 2long_variable = 3ComentáriosComentários que contradizem o código são piores do que comentários. Sempre priorize manter os comentários atualizados quando o código for alterado!Comentários devem ser frases completas. A primeira palavra deve ser maiúscula, a menos que seja um identificador que comece com uma letra minúscula (nunca altere o caso dos identificadores!).Os comentários de bloco geralmente consistem em um ou mais parágrafos construídos com sentenças completas, com cada sentença terminando em um período.Os comentários devem seguir a língua do código.Blocos de comentáriosOs blocos de comentários devem seguir a identação do código, e cada linha do comentário de começar com # e um espaço antes do texto.Comentários em linhaDevem ser separados em dois espaços do código, e começar com # e um espaço em branco antes do código.Convenções de nomenclatura  ArquivosArquivos devem seguir o padrão snake case.Exemplo:nlu_config.yml  ClassesClasses devem seguir o padrão pascal case.Exemplo:class ClassNameHere()  FunçõesFunções devem seguir o padrão camel case.Exemplo:def functionNameHere()  VariáveisVariáveis devem seguir o padrão camel case.Exemplo:int variableNameHere  ConstantesConstantes devem seguir o padrão screaming snake case.Exemplo:int CONSTANT_NAME_HERE"
}, 

{
"id": "-2019-03-29-gcs",
"title": "Plano de Gerenciamento de Configuração de Software",
"author": null,
"tags": ["plano", "configuração", "documento", "eps"],
"url": "/2019/03/29/gcs/",
"date": "2019-03-29",
"content": "Plano de Gerenciamento de Configuração de Software1. IntroduçãoEsse documento tem como objetivo a construção de um plano para definição das ferramentas que serão utilizadas pela equipe, das políticas para padronização de commits, branchs, pull requests e issues. 2. Ferramentas As ferramentas que serão utilizadas pela Equipe de Desenvolvimento serão:            Ferramentas      Versão      Descrição                  Visual Studio Code      -      Editor de texto para codar              Git      2.7.4 ou maior      Ferramenta de versionamento              GitHub      -      Servidor de hospedagem do projeto              GitHub Pages      -      Página estática para documentação              CodeClimate      -      Ferramenta para análise estática do código              Rasa Core+NLU      0.14.6      Ferramenta para criação do ChatBot              Flask      1.0.2      Framework de desenvolvimento para API              Flake8      3.7.7      Ferramenta de análise estática de código              Docker      -      Ferramenta para isolamento de ambiente      2.1 Visual Studio CodeO Visual Studio Code é o editor padrão da equipe. É utilizado por conta que é facilmente customizavél com seus plugins, ele também foi pensado pois atualmente é mais leve e rápido do que a concorrente Atom.2.2 GitFerramenta utilizada para o versionamento do código será utilizado o Git, é uma ferramenta de controle de versão descentralizada e um software livre, possibilitando o trabalho cooperativo entre várias pessoas no mesmo código. O método de utilização consiste em realizar as alterações locais versionando o código e quando conveniente é submetido ao repositório remoto.2.3 GitHubO GitHub é a ferramenta utilizada para hospedagem do repositório, controle de versão, marcação de atividades com as issues e documentação.2.4 GitHub PagesGitHub Pages é um servidor de hospedagem de sites estáticos que será utilizado pra subir a documentação. Esta ferramenta será utilizada, pois torna mais amigável a visualização dos documentos tornando maior o interesse pelo projeto.2.5 CodeClimateCodeCLimate é utilizada para análise estática de código adotada pela equipe. A escolha dessa ferramenta se deu a sua simplicidade de utilização e um diferencial crucial na escolha é por esta ferramenta possuir uma integração com o Github.2.4 Rasa Core+NLURasa é uma ferramenta para construição de ChatBots, ela foi escolhida por conta da sua simplicidade, por conter várias ferramentas e por ser de código aberto. Esta ferramenta é uma ferramenta amplamente utilizada pela comunidade para construção de ChatBots.2.5 FlaskFramework voltado para desenvolvimento web, utiliza a linguagem Python. Esse framework foi escolhido por conta da sua simplicidade, por ser configuravel, e pelo projeto utilizar uma arquitetura de microsserviços com várias APIs. A escolha dessa ferramenta pela equipe de EPS em vez de DjangoRest foi por Flask ser mais simples e mais prático.2.6 Flake8Ferramenta utilizada para análise estática de código adotada pela equipe. Está ferramenta também possibilita verificar se a folha de estilo está sendo seguida pelos membros.2.7 DockerO Docker é um plataforma que permite que a criação, execute e faça deploy de containers. De maneira simples, um container é o empacotamento da sua aplicação mais as dependências dela. A plataforma será utilizada para executar a aplicação sem precisar instalar as dependências de forma direta em uma máquina, assim facilitando o desenvolvimento quando o deploy para o ambiente de produção.3. Políticas3.1 Política de CommitsOs commits deveram possuir mensagens curtas, significativas e em português sobre o que é adicionado, corrigido ou removido no mesmo. Deve ser atômico, de forma a facilitar a refatoração e a rastreabilidade das funcionalidades.Cada commit estará ligado diretamente a uma issue, e para facilidade no rastreamento das atividades cada commit deverá possuir o hash da issue a qual se relaciona.E caso haja pareamento no desenvolvimento do commit, o commit deverá ser co-autorado. O seguinte padrão deve ser seguido:#Número_da_issue - Mensagem descritiva do commitCo-authored-by: Nome da pessoa &lt; emaildapessoa &gt;3.2 Política de BranchsO repositório do projeto contará com duas branches principais para o desenvolvimento, sendo elas: master e devel, e as branches auxiliares contendo as funcionalidades desenvolvidas.A branch master conterá a versão estável do produto, tendo seu conteúdo proveniente da branch de desenvolvimento (devel) após a aprovação do pull request. Por decisões de projeto, nenhum commit poderá ser feito pelos membros diretamente na branch master, exceto os commits iniciais de configuração do repositório.A branch devel será utilizada para o desenvolvimento do produto, onde a integração das funcionalidades desenvolvidas pela equipe nas branches auxiliares ocorrerá.As branches auxiliares serão utilizadas para o desenvolvimento das funcionalidades. Essas branches serão nomeadas de acordo com a rastreabilidade e na língua portuguesa, tendo o seu padrão de acordo com a metodologia adotada no momento.O nome da branch seguirá o seguinte padrão: issue_numero_da_issue_tema_da_issue- Exemplo: issue_1_documento_de_visao3.3 Política de Aprovação de CódigoApós a implementação ou correção de bug descrita na issue (o que inclui todos os critérios de aceitação estarem completos), o membro deverá abrir um Pull Request para a branch devel, que será revisado por um integrante da gerência responsável (em geral, Product Owner ou Scrum Master). E ao final de casa Sprint um Pull Request deverá ser aberto a branch Master, a partir da Devel e ser revisado pelo  Product Owner.4. Uso de IssuesAs issues serão utilizadas por questões de rastreabilidade, ou seja, para se ter maior controle sobre o que é desenvolvido, além de permitir melhor gestão de pessoal, pois facilita a alocação de trabalho para serviços específicos e permite acompanhamento do desenvolvimento a qual descreve. Cada issue deverá seguir o template descrito na própria issue.5. Bibliografia  GCS da equipe do Receita Mais  PMI. Um guia do conhecimento em gerenciamento de projetos. Guia PMBOK 6a. ed. - EUA: Project Management Institute, 2017."
}, 

{
"id": "-2019-03-29-documento-de-visão",
"title": "Documento de Visão",
"author": null,
"tags": ["documento", "visão", "mds"],
"url": "/2019/03/29/documento-de-vis%C3%A3o/",
"date": "2019-03-29",
"content": "Documento de Visão1.  Introdução &emsp;&emsp;Serão listadas na obra as premissas do desenvolvimento e da adaptação de uma ferramenta digital muito conhecida na atualidade - o Chatbot – para uma forma de transmissão de conteúdo didático, mais especificadamente, da linguagem de programação Python. Assim, com base na apuração destas informações, serão estruturadas funcionalidades inovadoras para a solução das adversidades levantadas. &emsp;&emsp;Este documento estará repleto de dados que sustentarão o propósito, o contexto e a visão geral do produto em questão para assim, garantir o total entendimento do projeto.1.1  Propósito &emsp;&emsp;O objetivo deste artigo será definir o problema, os perfis das partes interessadas e do usuário, o campo de negócio no qual a iniciativa será inserida, além de requisitos, recursos e especificações do sistema em pauta.1.2  Escopo &emsp;&emsp;De maneira sucinta, a problemática que tentaremos solucionar com este trabalho estará diretamente conectada à área pedagógica. A tecnologia desenvolvida facilitará o processo de aprendizagem de iniciantes principalmente e terá como destino não só o corpo discente como também os profissionais e as instituições de ensino responsáveis por lecionar disciplinas de linguagens de programação. Tais pontos serão devidamente explorados neste documento de visão. &emsp;&emsp;Em seguida, as informações técnicas do programa também serão bem delineadas e atualizadas caso seja necessário durante o processo de criação do sistema.1.3  Definições, acrônimos e abreviações &emsp;&emsp;Estarão listadas neste tópico definições, acrônimos e abreviações para garantir uma maior proximidade para com o leitor e o público interessado no projeto.1.3.1 DefiniçõesChatbot: programa de software que estabelece uma interação automática com o usuário, sem a necessidade de um indivíduo presente na ferramenta.1.3.2 Abreviações1.4  Referências  Stack OverflowAcessado em: 26/03/2018, 15:30, Horário de Brasília.  Dulce  IBM1.5  Visão Geral &emsp;&emsp;Desta forma, a ideia principal deste documento de visão é fornecer de maneira objetiva e organizada os assuntos que tangem à problemática inicial. &emsp;&emsp;As informações serão organizadas em tópicos referentes aos seguintes temas, como modelos de exemplo: o contexto da tecnologia no meio pedagógico, o detalhamento dos perfis interessados, as funcionalidades principais da ferramenta a ser produzida bem como característica técnicas do produto.2.  Posicionamento2.1  Oportunidade de Negócios &emsp;&emsp;O programa concebido pela equipe de desenvolvimento desempenha a função de superar os obstáculos encontrados no processo de aprendizagem comumente defasado e engessado no presente momento. Com o intuito de introduzir uma metodologia de ensino alternativa e dinâmica, com um formato inovador, o projeto foi criado justamente com um direcionamento ao professor, às instituições de educação e ao principal beneficente: o aluno. Plataformas digitais educacionais também são alvos quando se trata do campo empreendedor.2.2  Instrução do Problema &emsp;&emsp;Como foi dito anteriormente, devido ao ultrapassado modelo de aprendizado frequentemente encontrado em diversas instituições juntamente à grande dificuldade do público acadêmico em absorver conteúdos de programação, a ideia de um auxílio educacional tomou forma e foi desenvolvida pela equipe. Assim, o projeto foi construído com a finalidade de sanar os transtornos da comunidade acadêmica em geral, que sofre com a falta de dinamismo e fluidez em sala de aula. &emsp;&emsp;Ao tratar estes impasses dentro de classe, com o uso de ferramentas tecnológicas, seria enfim possível uma melhor qualificação do lecionando e garantiria também um maior interesse da parte de outros profissionais de diferentes áreas, engrandecendo, dessa forma, projetos futuros.            Tipo      Descrição                  Problema      Dificuldades encontradas no ensino atualmente.              Afeta      Campo acadêmico geral, tanto alunos quanto professores e corporações de educação que não alcançam êxito em suas funções.              Impactos      Formação de excelentes profissionais para o mercado de trabalho, estimular o interesse de especialistas de outras áreas.              Solução      O programa fornecerá diferentes funcionalidades para o usuário, como respostas automáticas para indagações do usuário, ajuda com sintaxe, indicar bibliotecas, feedback da compilação dos códigos.      2.3  Instrução de Posição do produto &emsp;&emsp;Como um dispositivo alternativo de aprendizado, o Aix Bot apresenta auxílio ao usuário ao demonstrar as funcionalidades de amparo em sintaxe da linguagem, explicação quanto a dúvidas na disciplina, indicação de bibliotecas e retornos de compilação de código. &emsp;&emsp;Com essas utilidades, o aplicativo alcança uma posição inovadora na categoria de programas didáticos para entidades de aprendizado, sejam elas presenciais ou não.3. Descrição da Parte Interessada e do Usuário  Cliente:          Instituições de ensino médio e superior      Empresas privadas        Usuários:          Pessoas iniciantes no aprendizado da linguagem de programação Python      Professores interessados em alternativas para o processo de ensino da linguagem Python      Usuários da plataforma Jupyter para o desenvolvimento em Python      Profissinais autônomos        Equipe: Graduandos do curso de Engenharia de Software da Universidade de Brasília campus Gama.3.1 Demográficos de Mercado &emsp;&emsp;Nos últimos anos a quantidade de programadores cresceu significamente, até mesmo por se tornar uma área profissional com boa oferta de emprego. Além disso, muitos cursos requerem que seus formandos tenham ao menos noção de programação. Uma das linguagens mais utilizadas atualmente é o Python. Nos últimos anos houve um grande crescimento em sua utilização devido a variedade de aplicações utilizando a linguagem. Porém, aprender a programar pode não ser tão fácil para qualquer um. Na Universidade de Brasília muitos alunos se sentem desmotivados a programar e em muitos casos isso pode ser intensificado por dificuldades em aprender a linguagem em si.3.2 Resumo da parte interessada &emsp;&emsp;Instituições de ensino, assim como empresas comerciais, se adaptam aos avanços tecnológicos existentes de modo a tornar seus dependentes mais aptos as necessidades cotidianas. Umas das possíveis adaptações atuais é o ensino de uma linguagem de programação, como o Python, aos seus funcionários e estudantes.3.3 Resumo do usuário  Pessoas iniciantes no aprendizado da linguagem de programação Python.          Funcionários de empresas e estudantes que estão entrando na área de tecnologia.        Professores interessados em alternativas para o processo de ensino da linguagem Python.  Usuários da plataforma Jupyter para o desenvolvimento em Python.  Profissinais autônomos que desejam aumentar seus conhecimentos.3.4 Principais Necessidades da Parte Interessada ou do UsuárioTabela 1. Necessidades da Parte Interessada            Necessidade      Prioridade      Solução Atual      Solução Proposta                  Uma ferramenta que auxilie no ensinamento de Python      Ser acessível      Cursos de qualificação, livros e documetações      Uma forma flexível, confíavel e menos trabalhosa de auxílio ao estudante      Tabela 2. Necessidades do Usuário            Necessidade      Prioridade      Solução Atual      Solução Proposta                  Tirar dúvidas de programação      Ser rápido e claro      Pesquisar por fóruns, livros e documentações      Permitir que o usuário converse com o bot e esclareça suas dúvidas      3.5 Alternativas e Concorrência  Stack Overflow          É um website para perguntas e respostas sobre tópicos de programação, onde, através do registro, é possível votar em questões e respostas mais ou menos úteis.        Udemy          Se trata de uma plataforma de cursos online. Alguns cursos permitem que os alunos comentem dúvidas e essas são respondidas pelos professores e/ou outros alunos.      4. Visão Geral do Produto4.1 Perspectiva do Produto &emsp;&emsp;O produto se difere dos demais do mercado por ser capaz de reconhecer a dúvida do aluno através de frases escritas de acordo com o português usual. De modo que após reconhecido, o questionamento será esclarecido de forma imediata4.2 Resumo das capacidades &emsp;&emsp;As capacidades do produto vão de encontro com as necessidades do aluno recém-ingresso no curso de Engenharia de Software ou do estudante que deseja aprender a programar, ambos começando por entender os elementos fundamentais da prática da programação. Assim, o Aix Bot será capaz de tirar dúvidas relacionadas a esta realidade dos seus usuários, incluindo erros de sintaxe, dúvidas relacionadas à linguagem Python, indicação de bibliotecas convenientes para as funcionalidades exigidas e feedback sobre as compilações no qual o usuário forneceu. Por fim, todos esses recursos foram pensandos para que o Bot seja capaz de estar sempre auxiliando o utilizador no tocante a programação básica.4.3 Suposições e Dependências &emsp;&emsp;O recurso de compilação dos códigos do usuário pode sofrer alterações ou ser retirado do escopo do produto, devido a limitação da tecnologia usada.4.4 Custo e precificação &emsp;&emsp;O produto não possui custos além dos relacionados a equipe de desenvolvimento e gerenciamento, não serão necessários nenhum serviço ou licença de terceiros pagos.5. Recursos do Produto5.1 Ajuda com sintaxe &emsp;&emsp;O usuário terá seus erros de sintaxe da linguagem python corrigidos pelo Bot5.2 Respostas de Dúvidas &emsp;&emsp;O Bot irá responder as dúvidas do aluno sobre a linguagem python5.3 Indicação de Bibliotecas &emsp;&emsp;Caso o usuário queira uma funcionalidade que não está disponível da STL da linguagem python, o Bot irá sugerir bibliotecas que possuam tal funcionalidade5.4 Feedback da compilação dos códigos &emsp;&emsp;Após o usuário mandar o Bot compilar seu código, o mesmo irá mandar um feedback da compilação. De modo que os possíveis erros e warnings serão mostrados e explicados6. Restrições  AIX é um bot que deverá funcionar juntamente ao ambiente web Jupyter Notebook.  O bot deverá estar disponível até Julho de 2019.  Para utilizar o bot será necessário um computador com sistema operacional Linux, Windows ou MacOS utilizando o ambiente Jupyter.7. Atributos do Recurso7.1 StatusTabela 3: Status de um recurso.            Status      Descrição                  Em análise      Recurso que foi desenvolvido, mas será checado se seus critérios de aprovação foram atendidos              Aprovado      Recurso que teve sucesso na análise, porém não está em produção              Em produção      Recurso em produção, incorporado ao código-fonte do servidor.      7.2 Benefício:Tabela 4: Prioridade do benefício.            Prioridade      Descrição                  Crítico      Recurso essencial. A falha da implementação de um recurso crítico acarreta, além da ausência do benefício dele, também acarreta numa falha crítica ou que o sistema não atenderá o cliente              Importante      Recursos importantes para a eficácia e eficiência do sistema para a maioria dos aplicativos. As funções não podem ser facilmente fornecidas de alguma outra maneira. Omitir um recurso importante pode afetar a satisfação do cliente ou do usuário, ou até mesmo a receita. No entanto, a liberação não será atrasada porque um recurso importante não foi incluído.              Útil      Os recursos que são úteis em menos aplicativos típicos, são usados menos frequentemente, ou podem corresponder às soluções alternativas razoavelmente eficientes. Nenhuma receita significativa ou impacto na satisfação do cliente poderá ser esperada se tal item não for incluído em uma liberação.      "
}, 

{
"id": "-2019-03-29-documento-de-arquitetura",
"title": "Documento de Arquitetura",
"author": null,
"tags": ["documento", "arquitetura", "mds"],
"url": "/2019/03/29/documento-de-arquitetura/",
"date": "2019-03-29",
"content": "1. Introdução1.1 Finalidade &emsp;&emsp;Este documento oferece uma visão geral arquitetural abrangente do sistema e, desse modo, especifica decisões relevantes na produção e implementação do projeto Aix em relação ao assunto discorrido, explicitando como acontecerá a comunicação dos diversos serviços contidos no software como um todo. Para isso, serão empregues diversas características do projeto como casos de usos, restrições e requisitos, qualidade, desempenho dentre outros com a finalidade de fundamentar as decisões tomadas pela equipe de desenvolvimento no decorrer da estruturação do escopo.1.2 Escopo &emsp;&emsp;Serão documentados neste trabalho os componentes de software, padrões, plataformas de desenvolvimento e frameworks necessários para a composição do programa que se dedica ao aprendizado de seus usuários da linguagem python. Resumidamente, o software consiste em um bot disponibilizado dentro de um iframe que se sobrepõe ao iframe da plataforma Jupyter Notebook, que visa orientar o ensino e aprendizado do usuário. &emsp;&emsp;Neste artigo serão exploradas todas as informações relacionadas à arquitetura do projeto, como por exemplo diagramas de classes, casos de testes, casos de uso, entre outros.1.3 Definições, acrônimos e abreviações1.4 Referências  Receita Mais  Dulce  Kalkuli  IBM  Quero Mais Conversa1.5 Visão GeralEsta obra será segmentada da seguinte forma:  Introdução: Apresentará a organização do documento, junto a uma breve finalidade do software.  Representação de Arquitetura: Demonstra a arquitetura adotada no trabalho.  Restrições e Metas de Arquitetura: Exibe os requisitos de usabilidade do software e os propósitos que influenciam a aplicação.  Visão de Casos de Uso: Revela os casos de uso da aplicação.  Visão de Implementação: Expõe um esboço de como será implementada a arquitetura elaborada.  Visão Lógica: Exibe elementos importantes do programa segundo a arquitetura adotada e a modelagem do design.  Tamanho e Desempenho: Detalha as especificações da aplicação que afetam o desempenho.  Qualidade: Retrata a forma como a opção da arquitetura do software engrandece a aplicação.3. Metas e Restrições da Arquitetura &emsp;&emsp;A aplicação deverá sobrepor o iframe do Jupyter Notebook com outro iframe e para seu desenvolvimento serão usadas as seguintes tecnologias:  React.js: biblioteca de JavaScript para criar interfaces para o usuário, com o qual faremos a parte de front-end da aplicação  Flask: microframework, construído em python, para o desenvolvimento das API’s do projeto. Será usado na versão 1.0.2.  Docker: Ferramenta para gerar um ambiente isolado e construído especificamente para a equipe que será utilizado para facilitar o desenvolvimento do projeto.  Git: Ferramenta de versionamento que será usada em conjunto com o GitHub para salvar os dados do decorrer do projeto, possibilitando a hospedagem e a geração de backups do mesmo. Será usada a versão 2.7.4 ou maior.  CodeClimate: Ferramenta para análise estática do código  Rasa Core+NLU: Ferramenta para criação do ChatBot. Será usada na versão 0.14.6.  Flake8: Ferramenta de análise estática de código. Será usada na versão 3.7.7.  Rocket Chat: Ferramenta para visualização do chat.O sistema deve garantir a privacidade dos dados inseridos em seu banco de dados, ele deve ser eficiente, conseguir responder às requisições em poucos segundos e ter alta disponibilidade, aproximandamente 99% do tempo. Ela também deverá atender aos requisitos não funcionais, como o estruturamento de código, para que assim seja garantida a manutenibilidade do sistema.4. Casos de Uso4.1 Diagrama de casos de uso4.2 Especificações dos casos de uso|Casos de Uso|Ator|Descrição||—|—|——||UC01 - Iniciar conversa| Usuário | Este caso de uso ocorre quando inicializa o bot e manda uma mensagem inicial||UC02 - Enviar arquivo| Usuário| Este caso de uso permite que o usuário envie um arquivo de código para o bot||UC03 - Escrever código| Usuário | Este caso de uso ocorre quando usuário implementa o código em seu computador||UC04 - Compilação de códigos| - | Este caso de uso ocorre quando o sistema compila o código enviado pelo usuário||UC05 - Feedback da compilação dos códigos| - | Este caso de uso ocorre após a compilação de um código, onde o bot avisa o usuário de possíveis erros e warnings que aconteceram na ação pedida e os explica, para que possam ser consertados||UC06 - Salvar conversa| - | Esse caso de uso ocorre após o usuário fechar o programa. O bot automaticamente salva os dados da conversa para que num próximo uso seja possível rever os que já foi conversado||UC07 - Corrigir exercícios por um juíz online| Juíz online | Esse caso de uso fornece ao usuário a opção de encaminhar seu código diretamente ao um juíz online que efetuará a correção do mesmo|6. Desempenho &emsp;&emsp;O desempenho do sistema será afetado por fatores como a velocidade da conexão do usuário com a internet e a quantidade de requisições sendo realizadas.7. Qualidade &emsp;&emsp;A arquitetura baseada em microserviços é ideal neste projeto porque todos os serviços são independentes e por conta de tal independência é possível gerenciar o trafego de todos individualmente, de modo que fica mais fácil de replicar ou excluir containers quando o trafego aumenta consideravelmente.Além de que, pelo fato de serem independentes é possível escalar todos os serviços, adicionar novas funcionalidades e remontar a arquitetura de maneira muito mais simples do que em um serviço monolítico"
}, 

{
"id": "-2019-03-28-EAP",
"title": "Estrutura Analitica do Projeto",
"author": null,
"tags": ["projeto", "eps", "documento"],
"url": "/2019/03/28/EAP/",
"date": "2019-03-28",
"content": "Estrutura Analítica do Projeto&emsp;&emsp; Este documento tem o objetivo de apresentar a construção da estrutura analítica do projeto (EAP) do bot Aix, que representa o processo de divisão do projeto em partes menores e mais facilmente gerenciáveis. Abaixo, encontram-se as versões de EAP desenvolvidas pelo grupo de gerenciamento da equipe.EAP v1.0"
}, 

{
"id": "-2019-03-27-tap",
"title": "Termo de Abertura do Projeto",
"author": null,
"tags": ["termo", "documento", "projeto", "eps"],
"url": "/2019/03/27/tap/",
"date": "2019-03-27",
"content": "Termo de Abertura de projeto1. IntroduçãoO presente documento tem como objetivo informar os propósitos, objetivos e requisitos de alto nível, assim como uma visão inicial do projeto do Bot Aix.2. DescriçãoAix é um bot disponibilizado na plataforma Jupyter, que visa orientar o ensino e aprendizado do usuário com assuntos relacionados a introdução à linguagem python.3. propósito e JustificativaOs alunos ou usuários que estão se introduzindo na área da programação possuem certas dificuldades quanto a estruturação da linguagem, formação da lógica por trás dos exercícios propostos, aplicação de funções ou bibliotecas específicas, falta de habilidade e conhecimento, sintaxe, traduzir o problema do mundo real para soluções inteligíveis e outros problemas como por exemplo a ausência de feedback imediato.Logo, a Aix surge para suprir essas necessidades e minimizar os problemas existentes neste contexto.A Aix chega para viabilizar o aprendizado de python de forma que não venha a existir impedimentos quanto a compreensão da estrutura da linguagem de forma que se tenha respostas quanto a todos os questionamentos sobre a forma correta de escrita, feedback quanto a correção de exercícios de forma que o usuário tenha um retorno rápido sobre o que conseguiu desenvolver assim como dúvidas sobre construção lógica a fim de minimizar os problemas quanto a formação lógica do exercício.4. ObjetivosO objetivo da Aix é  facilitar o recebimento de informações e apoio ao usuário durante o estudo ou desenvolvimento da linguagem python. Com acesso às funcionalidades disponibilizadas no bot o usuário poupa tempo e esforço em relação a realizar uma pesquisa segura e ainda consegue um feedback quanto ao exercício desenvolvido.5. Requisitos de Alto NívelEstão entre os requisitos de alto nível:  Construir personalidade do Bot;  As principais funcionalidades devem ser realizadas de forma simples e economizar o máximo de tempo possível e ainda assim ser mais eficaz que uma busca direta na web;  Interação através de linguagem natural para uma melhor usabilidade;  Fluxos de conversas objetivos e práticos;6. Riscos            Risco      Ação Preventiva      Ação Reativa                  Dificuldades da equipe com as novas tecnologias inseridas      Seleção de alunos experientes para aplicação de treinamento.      Realização de treinamento sobre tecnologias.              Divergência de horários entre membros da equipe      Elaboração de quadro de horários disponíveis da cada membro da equipe.      Planejamento de de pareamento por sprint baseado na disponibilidade dos integrantes por meio do quadro de disponibilidade.              Desistência da disciplina.      Estimular a máxima participação dos membros da equipe      Redistribuir tarefas de forma que não ocorra sobrecarga para nenhum dos membros do grupo e que o grupo consiga interagir da melhor maneira possível.              Alteração do escopo      Documentar e refinar de forma constante os requisitos      Planejar corretamente a sprint e se manter atualizado quanto às novas funcionalidades que serão adicionadas ao bot              Presença dos membros durante Daily e reunião de planejamento      Definir datas, horários e locais que sejam acessíveis a todos.      Manter o time sempre alinhado quanto às decisões tomadas.              Falta de cliente real      Utilização de ferramentas que ajudem a levantar requisitos      Utilização de dados levantados por usuários que sejam o público alvo do projeto.      7. Estimativa de Custo7.1. Custo de Aquisição            Equipamento      Quantidade      Finalidade      Valor unitário      Preço                  Notebooks      9 unidades      Desenvolvimento e planejamento      R$ 3.000      R$ 27.000              Energia elétrica      5 dias por semana      Desenvolvimento e planejamento      0,482 * R$/KWh      R$ 313,30              Internet      4 meses      Desenvolvimento e planejamento      R$ 100 **      R$ 400              Transporte e alimentação      2 passagens diárias + R$10 alimentação      Transporte e alimentaçao      R$ 16/dia      R$ 16.000        Fonte: http://www.aneel.gov.br/ranking-das-tarifas, acesso: 25/03/2019  Valor médio de um plano de internet na região do DF7.2. Custo de Pessoal            Cargo      Quantidade      Salário/mês (160h total)      Salário/hora      Total                  Desenvolvedor Python Jr      5      R$ 3.250      R$20,30      R$ 16.250              Arquiteto, DevOps, Scrum Master e PO      4      R$ 6.000      R$ 37,50      R$ 54.000      7.3. Custo de Ferramentas            Ferramenta      Finalidade      Preço total                  Telegram      Comunicação entre os membros      R$ 0              Editor de Texto      Elaboração de documentos e código      R$ 0              Git e GitHub      Versionamento de arquivos      R$ 0              Google Drive      Compartilhamento de arquivos      R$ 0              Linux      Ambiente de desenvolvimento      R$ 0              Python, Rasa, Flask, MongoDB      Tecnologias utilizadas para desenvolvimento      R$ 0      7.4. Custo Total            Custo      Valor total                  Aquisição      R$ 43.713,30              Pessoal      R$ 70.250              Ferramentas      R$ 0      O valor total estimado dos custos informados é de R$113.963,30. Levando em conta 20% de risco e 20% de lucro, o valor final para a estimativa de custo é de R$159.548,62.8. Partes Interessadas8.1. UsuáriosPessoas iniciantes no aprendizado da linguagem de programação PythonProfessores interessados em alternativas para o processo de ensino da linguagem PythonUsuários da plataforma Jupyter para o desenvolvimento em Python8.2. EquipeA equipe é composta por graduandos dos cursos de Engenharia de Produto de Software - EPS - (responsáveis pela gerência) e Metodologias de Desenvolvimento de Software - MDS - (responsáveis pelo desenvolvimento).            Nome      Papel      Email                  Eduardo Rodrigues Yoshida      Gerente de projeto      eduardoyosh@gmail.com              Guilherme Marques Moreira da Silva      Gerente de projeto      guilherme.marques.moreira@gmail.com              Kamilla Costa Souza      Gerente de projeto      kamillacosta.unb@gmail.com              Lucas Vitor de Paula      Gerente de projeto      lucasvitorifg@gmail.com              André Aben-Athar de Freitas      Desenvolvedor      andreabenf@gmail.com              Gabriela de Oliveira Lemos      Desenvolvedor      gabriela.leemoss@gmail.com              Gustavo Veloso Alves      Desenvolvedor      gustablealves@gmail.com              Iuri de Souza Severo Alves      Desenvolvedor      nobreiuri@gmail.com              Pedro Igor Oliveira Silva      Desenvolvedor      pedroigor852@gmail.com      9. Requisitos Para a Aprovação  Ter implementado as funcionalidades definidas pelo escopo do projeto  Integração com a plataforma Jupyter  Aprovação das ferramentas de análise de código10. ReferênciasFRANÇA, Diego; SCONETTO, João; MENDES, Mariana; ARNAUD, Victor. Dr. Down - Termo de Abertura de Projeto. Disponível em: https://fga-eps-mds.github.io/2018.1-Dr-Down/eps/TAP/. Acesso em 25 de março de 2019 às 21:15.EGEWARTH, Eliseu; EGEWARTH, João; GAMA, Gabriela; ALVES, Isaque. Dulce - Termo de Abertura de Projeto. Disponível em: https://github.com/fga-eps-mds/2017.1-Trezentos/wiki/Termo-de-Abertura-do-Projeto. Acesso em 25 de março de 2019 às 21:15.AUGUSTO,Guilherme; OLIVEIRA, Ícaro; SOUZA, Letícia. Lino, o bot - Termo de Abertura de Projeto. Disponível em: https://botlino.github.io/docs/doc-tap. Acesso em 25 de março de 2019 às 21:15.Rank de tarifas. ANEEL Agência Nacional de Energia Elétrica. Disponível em http://www.aneel.gov.br/ranking-das-tarifas. Acesso em 25 de março de 2019 às 21:15."
}, 

{
"id": "-2019-03-27-sprint-01",
"title": "Revisão da Sprint 0",
"author": null,
"tags": ["sprint", "revisão", "eps"],
"url": "/2019/03/27/sprint-01/",
"date": "2019-03-27",
"content": "Sprint 0DuraçãoDuração: 1 semanaInício: 18/03/2019Fim: 23/03/2019ObjetivosTreinamentos para equipe de MDSLevantamento de requisitosSprint Backlog#1 Dojo: Git#2 Dojo: Documento de Visão#3 Dojo: Metodologias e práticas ágeis#4 Dojo: Licenças#5 Dojo: Documento de Arquitetura#6 Formulário para a coleta de requisitosRetrospectivaPontos PositivosProatividade e interesse de MDSConseguimos o tema escolhidoNosso time é proativo, se empenharam muito e já estão pensando lá na frente (estão motivados)Conseguimos cumprir bem o que estava planejado para a SprintEPS está passando segurançaOrganização (tudo foi bem explicado)Pontos NegativosNão teve “quebra gelo”Escopo/tema não estava bem definidoTecnologia não estava definidaNúmero ímpar de MDSNão conhecer bem o EPSSábado a tarde é um horário ruimComplexidade do temaMelhoriasMelhor escopo, tá muito básicoMelhorar práticas ágeisAcrescentar mais no nosso escopoDefinir tudo o que não está definidoBurndownVelocityRiscos            Risco      Ação Preventiva      Ação Reativa                  Dificuldades da equipe com as novas tecnologias inseridas      Seleção de alunos experientes para aplicação de treinamento.      Realização de treinamento sobre tecnologias.              Divergência de horários entre membros da equipe      Elaboração de quadro de horários disponíveis da cada membro da equipe.      Planejamento de de pareamento por sprint baseado na disponibilidade dos integrantes por meio do quadro de disponibilidade.              Desistência da disciplina.      Estimular a máxima participação dos membros da equipe      Redistribuir tarefas de forma que não ocorra sobrecarga para nenhum dos membros do grupo e que o grupo consiga interagir da melhor maneira possível.              Alteração do escopo      Documentar e refinar de forma constante os requisitos      Planejar corretamente a sprint e se manter atualizado quanto às novas funcionalidades que serão adicionadas ao bot              Presença dos membros durante Daily e reunião de planejamento      Definir datas, horários e locais que sejam acessíveis a todos.      Manter o time sempre alinhado quanto às decisões tomadas.              Falta de cliente real      Utilização de ferramentas que ajudem a levantar requisitos      Utilização de dados levantados por usuários que sejam o público alvo do projeto.              Escopo não bem definido      Reuniões da gerencia para definição de um escopo viável      Alocação de pessoal para a definição do escopo.      "
}, 

{
"id": "-2019-03-27-fluxograma",
"title": "Fluxograma",
"author": null,
"tags": ["fluxograma", "aix", "eps"],
"url": "/2019/03/27/fluxograma/",
"date": "2019-03-27",
"content": "Fluxograma Aix&emsp;&emsp; Este documento tem o objetivo de apresentar a construção dos fluxogramas do bot Aix. Abaixo, encontra-se os fluxogramas e suas devidas versões com a finalidade de apresentar a evolução e maturidade do grupo quanto a construção e inserção de conteúdo assim como novas funcionalidades ao bot, baseado na aplicação da técnica mágico de Oz."
}, 

{
"id": "-2019-03-26-metodologia",
"title": "Metodologia",
"author": null,
"tags": ["metodologia", "documento", "eps"],
"url": "/2019/03/26/metodologia/",
"date": "2019-03-26",
"content": "Introdução e Descrição da Metodologia&emsp;&emsp; Este documento tem o objetivo de esclarecer as metodologias ágeis adotadas para o projeto **Aix**. Abaixo, encontra-se descrito as metodologias bases (Scrum e Kanban), papeis e artefatos selecionados, suprindo assim, as necessidades de organização e atividades da equipe.&emsp;&emsp;O Scrum é um framework que preza pela entrega de valor ao cliente de maneira rápida, criativa, onde sua equipe trabalha de forma produtiva.&emsp;&emsp;Tem como artefatos Product Backlog, Sprint Backlog e incrementos. Atividades, tem as Sprints, Sprints Planning, Daily Scrum, Sprint Review e Retrospectiva da Sprint. E como artefatos temos o Product Backlog e Sprint Backlog.&emsp;&emsp; Algumas práticas que iremos adotar desta metodologia são: Pair Programming, Integração Contínua, Padrão de Código e Testes.PapéisProduct Owner  Atribuições          Organizar o Product Backlog em ordem de prioridade, de forma a entregar valor ao cliente e manter a coesão do produto;      Garantir que o Product Backlog esteja de forma clara;      Assegurar que os Desenvolvedores entendam o Product Backlog no nível de especificação necessário;      Trabalhar a venda do produto de software;      Fazer o intermédio entre cliente e equipe;      Mostrar a visão do produto em documentos como Canvas.      Scrum Master  Atribuições          Garantir que o Product Backlog seja feito, de acordo com a priorização do Product Owner, pelos Desenvolvedores;      Certificar-se que os rituais ageís sejam realizados por toda a equipe da forma como foi descrito;      Mapear o progresso da equipe e do desenvolvimento do produto, assim como suas falhas e questões a melhorar;      Documentar o processo de cada Sprint.      Arquiteto de Software  Atribuições          Mapear, juntamente ao Product Owner e DevOps, a arquitetura necessária para o desenvolvimento do produto;      Desenhar e diagramar a arquitetura do produto;      Garantir que a arquitetura seja implementada pelos Desenvolvedores.                      Atribuições          Desenhar, juntamente com o Arquiteto, os vários pipelines do produto de software;      Implementar a integração contínua;      Garantir o deploy contínuo;      Facilitar a configuração do ambiente de desenvolvimento da equipe.        Quality Assurance              Atribuições          Decidir métricas para avaliar o produto de software e seu desenvolvimento;      Coletar e Analisar as métricas do produto de software;      Garantir as melhorias das métricas que necessitam dessas melhorias e manter a qualidade, tanto em termos de código, quanto em usabilidade, do produto de software.        Desenvolvedores              Atribuições          Desenvolver as funcionalidades priorizadas pelo Product Owner e selecionadas pelo Scrum Master dentro da Sprint;      Manter a qualidade do produto em relação a código.      Atividades da MetodologiaSprint  Trata-se de período definido pela equipe, que no caso do projeto é um período de uma semana, onde são realizado as tarefas definidas pelo Scrum Master, mas priorizadas pelo Product Owner.      Assim que este período é encerrado, entrega-se um valor ao cliente, como foi definido.          No projeto: a Sprint tem início no sábado e seu término no sábado seguinte.      Planejamento da Sprint  São reuniões onde o Scrum Master, em conjunto com o Product Owner, decide as funcionalidades e atividades que deverão ser realizadas pela equipe de Desenvolvimento e também avaliadas quais melhorias devem ser feitas.  O esforço para realizar cada uma das tarefas é medido com a equipe e assim, essas tarefas serão pontuadas.  É definido também, as duplas que trabalharão em conjunto (Pair Programming).Daily Meeting  Reuniões com o tempo determinado de 15 minutos, onde cada membro da equipe fala sobre o andamento da tarefa e seu planejamento para terminá-la.          No projeto: estas reuniões ocorrem de segunda a sexta, e possuem duração de, no máximo, 20 minutos.      Sprint Review  Discussão das dificuldades, melhorias e pontos positivos durante a Sprint, além do levantamento das tarefas realizadas e não realizadas.  A avaliação geral da Sprint é feita pelo Scrum Master, porém todas os pontos (positivos, negativos e a melhorar) é debatido pela equipe.          No projeto: a Review ocorre aos sábados, no mesmo dia do Planejamento da Sprint.      Pair Programming  Ritual onde dois membros da equipe de Desenvolvimento, trabalham juntos para realizar uma tarefa.  A cada 15 minutos, um deles assume o papel de piloto, ou seja, escreve o código, e o outro assume o papel de co-piloto e dita a lógica para realizar a funcionalidade e também auxilia o piloto a pensar na melhor forma de desenvolver essa funcionalidade.Integração Contínua  Prática de testar as modificações do código que foi submetida ao repositorio remoto do projeto.  Todo o funcionamento da integração continua é pensado e efeitvado pelo DevOps do projeto.Padrão de Código  É a definição de escrita do código, de maneira a manter a homogeniedade deste.  A folha de estilo, documento que define esse padrão, é contruida pelo Quality Assurence.Testes  Toda a funcionalidade desenvolvida, deve ser testada, ou seja, deve ser implementados testes que prevêm funcionamento errôneo ou indesejado da funcionalidade. E esta funcionalidade deve passar em todos os testes escritos.Kanban      Metodologia que consistem em um quadro divido em TO DO, DOING e DONE, e em cada uma destas colunas é colocado as tarefas que devem ser feitas, as que estão no processo de ser feitas e as completas, respectivamente.          No projeto, utilizamos o Zenhub para contemplar esta metodologia.      Referências Bibliográficas                    GLOSSARY Extreme Programming                                Extreme Programming - Conceitos e Práticas                                What is Scrum                                Lino - Metodologia            "
}, 

{
"id": "-2019-03-25-codigo-de-conduta",
"title": "Código de Conduta",
"author": null,
"tags": ["código", "conduta", "eps"],
"url": "/2019/03/25/codigo-de-conduta/",
"date": "2019-03-25",
"content": "Código de Conduta do Convênio de ContribuiçãoNosso CompromissoNo interesse de promover um ambiente aberto e acolhedor, nós, como colaboradores e mantenedores, prometemos fazer parte de nosso projeto e de nossa comunidade uma experiência livre de assédio para todos, independentemente da idade, tamanho corporal, deficiência, etnia, identidade e expressão de gênero, nível de experiência, nacionalidade, aparência pessoal, raça, religião ou identidade e orientação sexual.Nossos PadrõesExemplos de comportamentos que contribuem para criar um ambiente positivo incluem:  Uso linguagem acolhedora e inclusiva.  Ser respeitoso com diferentes pontos de vista e experiências.  Aceitar críticas construtivas.  Concentrar no que é melhor para a comunidade.  Mostrar empatia para com outros membros da comunidade.Exemplos de comportamentos inaceitáveis dos contribuidores incluem:  O uso de linguagem ou imagens sexualizadas e avanços ou assédios sexuais indesejáveis.  Comentários depreciativos, insultos/derrogatórios e ataques pessoais ou políticos.  Assédio público ou em privado.  Publicar a informação privada dos outros, como um endereço físico ou eletrônico, sem permissão explícita.  Outra conduta que razoavelmente pode ser considerada inapropriada em um ambiente profissional.Nossas ResponsabilidadesOs responsáveis ​​pelo projeto são responsáveis ​​por esclarecer os padrões de comportamento aceitável e devem tomar medidas corretivas apropriadas e justas em resposta a qualquer instância de comportamento inaceitável.Os mantenedores do projeto têm o direito e a responsabilidade de remover, editar ou rejeitar comentários, compromissos, códigos, edições de wiki, problemas e outras contribuições que não estejam alinhados com este Código de Conduta ou proibir temporariamente ou permanentemente qualquer contribuinte para outros comportamentos que eles consideram inapropriado, ameaçador, ofensivo ou prejudicial.EscopoEste Código de Conduta aplica-se tanto nos espaços do projeto quanto nos espaços públicos quando um indivíduo representa o projeto ou sua comunidade. Exemplos de representar um projeto ou comunidade incluem o uso de um endereço de e-mail oficial do projeto, postagem através de uma conta oficial em mídias sociais, ou atuando como representante designado em um evento online ou offline. A representação de um projeto pode ser melhor definida e esclarecida pelos responsáveis ​​pelo projeto.ExecuçãoInstâncias de comportamento abusivo, de assédio ou de outra forma inaceitável podem ser comunicadas ao contactar a equipe do projeto em equipebot19@gmail.com .A equipe do projeto irá rever e investigar todas as queixas, e responderá da forma que julgar apropriada às circunstâncias.A equipe do projeto é obrigada a manter a confidencialidade em relação ao repórter de um incidente. Mais detalhes sobre políticas de execução específicas podem ser publicados separadamente.Os mantenedores do projeto que não seguem ou aplicam o Código de Conduta de boa fé podem enfrentar repercussões temporárias ou permanentes, conforme determinado por outros membros da liderança do projeto.AtribuiçãoEste Código de Conduta é adaptado da Convenção do Contribuinte, versão 1.4, disponível em http://contributor-covenant.org/version/1/4"
}

]
